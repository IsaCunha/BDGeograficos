import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base

base = declarative_base()
engine = sa.create_engine(
    "postgresql+psycopg://lucas:abc123@localhost:5432/gis",
    pool_pre_ping=True,
    pool_recycle=3600,
    connect_args={"options": "-csearch_path=tp_bdg"},
    client_encoding="utf8",
)
base.metadata.bind = engine
session = orm.scoped_session(orm.sessionmaker())(bind=engine)


class ElectionsResults(base):
    __tablename__ = "elections_results"

    id = sa.Column(sa.Integer, primary_key=True)

    dt_geracao = sa.Column(sa.String(1024))
    hh_geracao = sa.Column(sa.String(1024))
    ano_eleicao = sa.Column(sa.String(1024))
    cd_tipo_eleicao = sa.Column(sa.Integer)
    nm_tipo_eleicao = sa.Column(sa.String(1024))
    nr_turno = sa.Column(sa.Integer)
    cd_eleicao = sa.Column(sa.Integer)
    ds_eleicao = sa.Column(sa.String(1024))
    dt_eleicao = sa.Column(sa.String(1024))
    tp_abrangencia = sa.Column(sa.String(1024))
    sg_uf = sa.Column(sa.String(1024))
    sg_ue = sa.Column(sa.String(1024))
    nm_ue = sa.Column(sa.String(1024))
    cd_municipio = sa.Column(sa.Integer)
    nm_municipio = sa.Column(sa.String(1024))
    nr_zona = sa.Column(sa.Integer)
    cd_cargo = sa.Column(sa.Integer)
    ds_cargo = sa.Column(sa.String(1024))
    sq_candidato = sa.Column(sa.String(1024))
    nr_candidato = sa.Column(sa.Integer)
    nm_candidato = sa.Column(sa.String(1024))
    nm_urna_candidato = sa.Column(sa.String(1024))
    nm_social_candidato = sa.Column(sa.String(1024))
    cd_situacao_candidatura = sa.Column(sa.Integer)
    ds_situacao_candidatura = sa.Column(sa.String(1024))
    cd_detalhe_situacao_cand = sa.Column(sa.Integer)
    ds_detalhe_situacao_cand = sa.Column(sa.String(1024))
    cd_situacao_julgamento = sa.Column(sa.Integer)
    ds_situacao_julgamento = sa.Column(sa.String(1024))
    cd_situacao_cassacao = sa.Column(sa.Integer)
    ds_situacao_cassacao = sa.Column(sa.String(1024))
    cd_situacao_diploma = sa.Column(sa.Integer)
    ds_situacao_diploma = sa.Column(sa.String(1024))
    tp_agremiacao = sa.Column(sa.String(1024))
    nr_partido = sa.Column(sa.Integer)
    sg_partido = sa.Column(sa.String(1024))
    nm_partido = sa.Column(sa.String(1024))
    nr_federacao = sa.Column(sa.Integer)
    nm_federacao = sa.Column(sa.String(1024))
    sg_federacao = sa.Column(sa.String(1024))
    ds_composicao_federacao = sa.Column(sa.String(1024))
    sq_coligacao = sa.Column(sa.String(1024))
    nm_coligacao = sa.Column(sa.String(1024))
    ds_composicao_coligacao = sa.Column(sa.String(1024))
    st_voto_em_transito = sa.Column(sa.String(1024))
    qt_votos_nominais = sa.Column(sa.String(1024))
    nm_tipo_destinacao_votos = sa.Column(sa.String(1024))
    qt_votos_nominais_validos = sa.Column(sa.String(1024))
    cd_sit_tot_turno = sa.Column(sa.Integer)
    ds_sit_tot_turno = sa.Column(sa.String(1024))


class DespesasPartidarias(base):
    __tablename__ = "despesas_partidarias"

    id = sa.Column(sa.Integer, primary_key=True)

    dt_geracao = sa.Column(sa.String(1024))
    hh_geracao = sa.Column(sa.String(1024))
    aa_exercicio = sa.Column(sa.String(1024))
    tp_despesa = sa.Column(sa.String(1024))
    cd_tp_esfera_partidaria = sa.Column(sa.Integer)
    ds_tp_esfera_partidaria = sa.Column(sa.String(1024))
    sg_uf = sa.Column(sa.String(1024))
    cd_municipio = sa.Column(sa.Integer)
    nm_municipio = sa.Column(sa.String(1024))
    nr_zona = sa.Column(sa.String(1024))
    nr_cnpj_prestador_conta = sa.Column(sa.String(1024))
    sg_partido = sa.Column(sa.String(1024))
    nm_partido = sa.Column(sa.String(1024))
    cd_tp_documento = sa.Column(sa.Integer)
    ds_tp_documento = sa.Column(sa.String(1024))
    nr_documento = sa.Column(sa.String(1024))
    aa_aidf = sa.Column(sa.String(1024))
    nr_aidf = sa.Column(sa.String(1024))
    cd_tp_fornecedor = sa.Column(sa.Integer)
    ds_tp_fornecedor = sa.Column(sa.String(1024))
    nr_cpf_cnpj_fornecedor = sa.Column(sa.String(1024))
    nm_fornecedor = sa.Column(sa.String(1024))
    ds_gasto = sa.Column(sa.String(1024))
    dt_pagamento = sa.Column(sa.String(1024))
    vr_gasto = sa.Column(sa.String(1024))
    vr_pagamento = sa.Column(sa.String(1024))
    vr_documento = sa.Column(sa.String(1024))
    cd_fonte_despesa = sa.Column(sa.Integer)
    ds_fonte_despesa = sa.Column(sa.String(1024))
    sq_despesa = sa.Column(sa.String(1024))


class ReceitasPartidarias(base):
    __tablename__ = "receitas_partidarias"

    id = sa.Column(sa.Integer, primary_key=True)

    dt_geracao = sa.Column(sa.String(1024))
    hh_geracao = sa.Column(sa.String(1024))
    cd_tp_esfera_partidaria = sa.Column(sa.Integer)
    ds_tp_esfera_partidaria = sa.Column(sa.String(1024))
    sg_uf = sa.Column(sa.String(1024))
    cd_municipio = sa.Column(sa.Integer)
    nm_municipio = sa.Column(sa.String(1024))
    nr_zona = sa.Column(sa.String(1024))
    nr_cnpj_prestador_conta = sa.Column(sa.String(1024))
    sg_partido = sa.Column(sa.String(1024))
    nm_partido = sa.Column(sa.String(1024))
    cd_tp_origem_doacao = sa.Column(sa.Integer)
    ds_tp_origem_doacao = sa.Column(sa.String(1024))
    nr_cpf_cnpj_doador = sa.Column(sa.String(1024))
    nm_doador = sa.Column(sa.String(1024))
    cd_tp_esfera_partidaria_doador = sa.Column(sa.Integer)
    ds_tp_esfera_partidaria_doador = sa.Column(sa.String(1024))
    sg_uf_doador = sa.Column(sa.String(1024))
    cd_municipio_doador = sa.Column(sa.Integer)
    nm_municipio_doador = sa.Column(sa.String(1024))
    nr_zona_doador = sa.Column(sa.String(1024))
    sq_candidato_doador = sa.Column(sa.String(1024))
    nr_candidato_doador = sa.Column(sa.Integer)
    cd_candidato_cargo_doador = sa.Column(sa.Integer)
    ds_candidato_cargo_doador = sa.Column(sa.String(1024))
    cd_tp_fonte_recurso = sa.Column(sa.Integer)
    ds_tp_fonte_recurso = sa.Column(sa.String(1024))
    cd_tp_natureza_recurso = sa.Column(sa.Integer)
    ds_tp_natureza_recurso = sa.Column(sa.String(1024))
    cd_tp_especie_recurso = sa.Column(sa.Integer)
    ds_tp_especie_recurso = sa.Column(sa.String(1024))
    nr_recibo_doacao = sa.Column(sa.String(1024))
    nr_documento = sa.Column(sa.String(1024))
    dt_receita = sa.Column(sa.String(1024))
    ds_receita = sa.Column(sa.String(1024))
    vr_receita = sa.Column(sa.String(1024))


class DadosPIB(base):
    __tablename__ = "dados_pib"

    ano = sa.Column(sa.Integer, primary_key=True)
    cd_grande_regiao = sa.Column(sa.String(1024))
    nm_grande_regiao = sa.Column(sa.String(1024))
    cd_uf = sa.Column(sa.Integer)
    sg_uf = sa.Column(sa.String(1024))
    nm_uf = sa.Column(sa.String(1024))
    cd_mun = sa.Column(sa.Integer, primary_key=True)
    nm_mun = sa.Column(sa.String(1024))
    reg_metrop = sa.Column(sa.String(1024))
    cd_mesorg = sa.Column(sa.Integer)
    nm_mesorg = sa.Column(sa.String(1024))
    cd_microrg = sa.Column(sa.Integer)
    nm_microrg = sa.Column(sa.String(1024))
    cd_rgi = sa.Column(sa.Integer)
    nm_rgi = sa.Column(sa.String(1024))
    mun_rgi = sa.Column(sa.String(1024))
    cd_rgitmd = sa.Column(sa.Integer)
    nm_rgitmd = sa.Column(sa.String(1024))
    mun_rgitmd = sa.Column(sa.String(1024))
    cd_conc_urb = sa.Column(sa.Integer, nullable=True)
    nm_conc_urb = sa.Column(sa.String(1024))
    tp_conc_urb = sa.Column(sa.String(1024))
    cd_arj_pop = sa.Column(sa.Integer)
    nm_arj_pop = sa.Column(sa.String(1024))
    hierarquia_urb = sa.Column(sa.String(1024))
    hierarquia_urb_categ = sa.Column(sa.String(1024))
    cd_reg_rural = sa.Column(sa.Integer)
    nm_reg_rural = sa.Column(sa.String(1024))
    reg_rural_clas_nuc = sa.Column(sa.String(1024))
    amazonia_legal = sa.Column(sa.String(1024))
    semiarido = sa.Column(sa.String(1024))
    reg_sp = sa.Column(sa.String(1024))
    vb_pecuaria = sa.Column(sa.String(1024))
    vb_indust = sa.Column(sa.String(1024))
    vb_servicos = sa.Column(sa.String(1024))
    vb_adm = sa.Column(sa.String(1024))
    vb_total = sa.Column(sa.String(1024))
    impostos = sa.Column(sa.String(1024))
    pib = sa.Column(sa.String(1024))
    pip_per_capita = sa.Column(sa.String(1024))
    atv_maior_vb = sa.Column(sa.String(1024))
    atv_seg_maior_vb = sa.Column(sa.String(1024))
    atv_terc_maior_vb = sa.Column(sa.String(1024))


class PIBMunicipios(base):
    __tablename__ = "pib_municipios"

    id = sa.Column(sa.Integer, primary_key=True)

    ano = sa.Column(sa.Integer)
    cd_grande_regiao = sa.Column(sa.String(1024))
    nm_grande_regiao = sa.Column(sa.String(1024))
    cd_uf = sa.Column(sa.Integer)
    sg_uf = sa.Column(sa.String(1024))
    nm_uf = sa.Column(sa.String(1024))
    cd_mun = sa.Column(sa.Integer)
    nm_mun = sa.Column(sa.String(1024))
    reg_metrop = sa.Column(sa.String(1024))
    cd_mesorg = sa.Column(sa.Integer)
    nm_mesorg = sa.Column(sa.String(1024))
    cd_microrg = sa.Column(sa.Integer)
    nm_microrg = sa.Column(sa.String(1024))
    cd_rgi = sa.Column(sa.Integer)
    nm_rgi = sa.Column(sa.String(1024))
    mun_rgi = sa.Column(sa.String(1024))
    cd_rgitmd = sa.Column(sa.Integer)
    nm_rgitmd = sa.Column(sa.String(1024))
    mun_rgitmd = sa.Column(sa.String(1024))
    cd_conc_urb = sa.Column(sa.Integer, nullable=True)
    nm_conc_urb = sa.Column(sa.String(1024))
    tp_conc_urb = sa.Column(sa.String(1024))
    cd_arj_pop = sa.Column(sa.Integer)
    nm_arj_pop = sa.Column(sa.String(1024))
    hierarquia_urb = sa.Column(sa.String(1024))
    hierarquia_urb_categ = sa.Column(sa.String(1024))
    cd_reg_rural = sa.Column(sa.Integer)
    nm_reg_rural = sa.Column(sa.String(1024))
    reg_rural_clas_nuc = sa.Column(sa.String(1024))
    amazonia_legal = sa.Column(sa.String(1024))
    semiarido = sa.Column(sa.String(1024))
    reg_sp = sa.Column(sa.String(1024))
    vb_pecuaria = sa.Column(sa.Integer)
    vb_indust = sa.Column(sa.Integer)
    vb_servicos = sa.Column(sa.Integer)
    vb_adm = sa.Column(sa.Integer)
    vb_total = sa.Column(sa.Integer)
    impostos = sa.Column(sa.Integer)
    pib = sa.Column(sa.Integer)
    pip_per_capita = sa.Column(sa.Integer)
    atv_maior_vb = sa.Column(sa.String(1024))
    atv_seg_maior_vb = sa.Column(sa.String(1024))
    atv_terc_maior_vb = sa.Column(sa.String(1024))


class PopCorRaca(base):
    __tablename__ = "pop_cor_raca_2022"

    cd_mun = sa.Column(sa.String(1024), primary_key=True)
    nm_mun = sa.Column(sa.String(1024))
    tot_pop = sa.Column(sa.String(1024))
    abs_pop_branca = sa.Column(sa.String(1024))
    abs_pop_preta = sa.Column(sa.String(1024))
    abs_pop_amarela = sa.Column(sa.String(1024))
    abs_pop_parda = sa.Column(sa.String(1024))
    abs_pop_indigena = sa.Column(sa.String(1024))
    ignorados = sa.Column(sa.String(1024))
    perc_branca = sa.Column(sa.String(1024))
    perc_preta = sa.Column(sa.String(1024))
    perc_amarela = sa.Column(sa.String(1024))
    perc_parda = sa.Column(sa.String(1024))
    perc_indigena = sa.Column(sa.String(1024))
    abs_indigena_cor_raca = sa.Column(sa.String(1024))
    perc_indigena_cor_raca = sa.Column(sa.String(1024))


class DistribuicaoPopulacao(base):
    __tablename__ = "distribuicao_populacao"

    id = sa.Column(sa.Integer, primary_key=True)
    cd_mun = sa.Column(sa.Integer)
    nm_mun = sa.Column(sa.String(1024))
    tot_pop = sa.Column(sa.Integer)
    abs_pop_branca = sa.Column(sa.Integer)
    abs_pop_preta = sa.Column(sa.Integer)
    abs_pop_amarela = sa.Column(sa.Integer)
    abs_pop_parda = sa.Column(sa.Integer)
    abs_pop_indigena = sa.Column(sa.Integer)
    ignorados = sa.Column(sa.Integer)
    perc_branca = sa.Column(sa.Float)
    perc_preta = sa.Column(sa.Float)
    perc_amarela = sa.Column(sa.Float)
    perc_parda = sa.Column(sa.Float)
    perc_indigena = sa.Column(sa.Float)
    abs_indigena_cor_raca = sa.Column(sa.Integer)
    perc_indigena_cor_raca = sa.Column(sa.Float)


base.metadata.create_all(bind=engine)
